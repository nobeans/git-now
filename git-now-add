usage() {
  echo "usage: git now add [-n] [-v] [--force | -f] [--interactive | -i] [--patch | -p]"
  echo "               [--edit | -e] [--all | [--update | -u]] [--intent-to-add | -N]"
  echo "               [--refresh] [--ignore-errors] [--ignore-missing] [--stat | -s] [--push]"
  echo "               [--no-diff]"
  echo "               [--] [<filepattern>...]"
}

cmd_default() {
  MESSAGE="[${PREFIX}] `date +\"%Y/%m/%d %T\"`"
  if [ $# -eq 0 ]; then
    git add -u
    printf "${MESSAGE}\n\n%s" "`git diff --cached`" | git commit -F -
  else
    local is_all=false
    local is_stat=false
    local is_push=false
    local is_no_diff=false
    local args=()

    # args loop
    for arg in "$@"
    do
      if [ $arg = "--stat" ] || [ $arg = "-s" ]; then
        is_stat=true
      elif [ $arg = "--all" ]; then
        is_all=true
      elif [ $arg = "--push" ]; then
        is_push=true
      elif [ $arg = "--no-diff" ]; then
        is_no_diff=true
      else
        n=${#args[@]}
        args[$n]=$arg
      fi
    done

    if ! $is_all; then
      git add ${args[@]}
    else
      git add -u
      git add .
    fi

    local detail_message=''
    if ! $is_no_diff; then
      if $is_stat; then
        detail_message="`git diff --cached --stat`"
      else
        detail_message="`git diff --cached`"
      fi
    fi

    printf "${MESSAGE}\n\n%s" "${detail_message}" | git commit -F -

    $is_push && git push
  fi
}

cmd_help() {
  usage
  exit 0
}

# vim: set ff=unix ft=sh :
